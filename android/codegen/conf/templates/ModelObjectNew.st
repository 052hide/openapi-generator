package com.wordnik.model;

import org.json.JSONObject
import org.json.JSONArray
import org.json.JSONException
import com.wordnik.common.WordnikObject;
import com.wordnik.annotations.AllowableValues;
import com.wordnik.annotations.Required;

$imports:{ import |
import $import$;
}$

/**
 * $model.description$
 * NOTE: This class is auto generated by the drive code generator program so please do not edit the program manually.  
 * @author ramesh
 *
 */
public class $className$ extends WordnikObject {

	$fields:{ field |
	 //$field.description$
	 private $field.attributeDefinition.returnType$ $field.attributeDefinition.name$ $field.attributeDefinition.initialization$;  
	}$
	
	$fields:{ field |
	 //$field.description$
	 $if(field.required)$ 
	 @Required $endif$
	 $if(field.allowableValues)$
	 @AllowableValues(value="$field.allowableValues$")$endif$	 
	 public $field.attributeDefinition.returnType$ get$field.attributeDefinition.NameForMethod$() {
	 	return $field.attributeDefinition.name$;
	 }  
	 
	 public void set$field.attributeDefinition.NameForMethod$($field.attributeDefinition.returnType$  $field.attributeDefinition.name$) {
	 	this.$field.attributeDefinition.name$ = $field.attributeDefinition.name$;
	 }
	}$

	public $className$ fromJSON(String json) {
        JSONObject jso;
        try {
            jso = new JSONObject(json);
        } catch(Exception e) {
            // ignore for now
        }

        try {
            $fields:{ field |
                if($field.attributeDefinition.returnType$.equals("Int")) {
                    jso.getInt("$field.attributeDefinition.name$");
                } else if($field.attributeDefinition.returnType$.equals("Long")) {
                    jso.getLong("$field.attributeDefinition.name$");
                } else if($field.attributeDefinition.returnType$.equals("Double")) {
                    jso.getDouble("$field.attributeDefinition.name$");
                } else if($field.attributeDefinition.returnType$.equals("String")) {
                    jso.getString("$field.attributeDefinition.name$");
                } else if($field.attributeDefinition.returnType$.equals("Boolean")) {
                    jso.getBoolean("$field.attributeDefinition.name$");
                } else if($field.attributeDefinition.returnType$.startsWith("List[")) {
                    // JSONArray
                } else if($field.attributeDefinition.returnType$.startsWith("Map[")) {
                    // JSONArray
                } else {
                    // JSONObject
                }
            }$
        } catch (JSONException e) {
            // ignore for now
        }
	}
}
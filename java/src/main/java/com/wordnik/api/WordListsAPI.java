package com.wordnik.api;


import com.wordnik.common.*;
import com.wordnik.common.ext.*;
import com.wordnik.exception.WordnikExceptionCodes;
import com.wordnik.exception.WordnikAPIException;
import com.wordnik.model.*;
import java.util.*;
import com.wordnik.annotations.MethodArgumentNames;
import org.codehaus.jackson.map.DeserializationConfig.Feature;
import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.type.TypeReference;
import java.io.IOException;

/**
 * NOTE: This class is auto generated by the drive code generator program so please do not edit the program manually.  
 * @author ramesh
 *
 */
public class WordListsAPI extends WordnikAPI {

	/**
	 * Returns information about API parameters
 
	 * 
	 * @return Doc {@link Doc}
	 * @throws WordnikAPIException 404 - No data available  
	 */
	public static Doc getHelp() throws WordnikAPIException {

		
		//parse inputs
		String  resourcePath = "/wordLists.{format}";
		resourcePath = resourcePath.replace("{format}","json");
		String method = "GET";
		Map<String, String> queryParams = new HashMap<String, String>();
		
		
	
		//make the API Call
		String response = invokeAPI(null, resourcePath, method, queryParams, null);
		//create output objects if the response has more than one object
        if(response == null || response.length() == 0){
            return null;
        }
		Doc responseObject = (Doc)deserialize(response, Doc.class);
		return responseObject;		
				
	}
	
	
	/**
	 * Creates a WordList.
 
	 * @param postObject  WordList to create
 
	 * @param authToken  The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
 

	 * 
	 * @return WordList {@link WordList}
	 * @throws WordnikAPIException 400 - Invalid WordList supplied or mandatory fields are missing. 403 - Not authenticated. 404 - WordList owner not found.  
	 */
	 @MethodArgumentNames(value="postObject, authToken") 
	public static WordList createWordList(WordList postObject, String authToken) throws WordnikAPIException {

		if(authToken == null || authToken.length() == 0) {
			throw new WordnikAPIException(WordnikExceptionCodes.AUTH_TOKEN_NOT_VALID);
		}		
		//parse inputs
		String  resourcePath = "/wordLists.{format}";
		resourcePath = resourcePath.replace("{format}","json");
		String method = "POST";
		Map<String, String> queryParams = new HashMap<String, String>();
		
		
	
		//make the API Call
	
		String response = invokeAPI(authToken, resourcePath, method, queryParams, postObject);		
		
		//create output objects if the response has more than one object
        if(response == null || response.length() == 0){
            return null;
        }
		WordList responseObject = (WordList)deserialize(response, WordList.class);
		return responseObject;		
				
	}
	
	
	
}
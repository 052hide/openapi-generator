package com.wordnik.model;

import com.wordnik.common.WordnikObject;
import com.wordnik.annotations.AllowableValues;
import com.wordnik.annotations.Required;

import com.wordnik.common.WordListType;
import com.wordnik.common.StringValue;
import com.wordnik.common.Size;


/**
 * 
 * NOTE: This class is auto generated by the drive code generator program so please do not edit the program manually.  
 * @author ramesh
 *
 */
public class WordContextualLookupInput extends WordnikObject {

		 //Word to return definitions for
		 private String word ;  
			 //The sentence in which the word occurs
		 private String sentence ;  
			 //The start character offset of the word in the given sentence
		 private String offset ;  
			 //Expand context terms using related words
		 private String expandTerms ;  
			 //Only include these comma-delimited source dictionaries
		 private String includeSourceDictionaries ;  
			 //Exclude these comma-delimited source dictionaries
		 private String excludeSourceDictionaries ;  
			 //Results to skip
		 private String skip ;  
			 //Maximum number of results to return
		 private String limit ;  
		
	
		 //Word to return definitions for
		 
		 public String getWord() {
		 	return word;
		 }  
		 
		 public void setWord(String  word) {
		 	this.word = word;
		 }
			 //The sentence in which the word occurs
		 
		 public String getSentence() {
		 	return sentence;
		 }  
		 
		 public void setSentence(String  sentence) {
		 	this.sentence = sentence;
		 }
			 //The start character offset of the word in the given sentence
		 @AllowableValues(value="0 to 4096")	 
		 public String getOffset() {
		 	return offset;
		 }  
		 
		 public void setOffset(String  offset) {
		 	this.offset = offset;
		 }
			 //Expand context terms using related words
		 @AllowableValues(value="true,false")	 
		 public String getExpandTerms() {
		 	return expandTerms;
		 }  
		 
		 public void setExpandTerms(String  expandTerms) {
		 	this.expandTerms = expandTerms;
		 }
			 //Only include these comma-delimited source dictionaries
		 @AllowableValues(value="ahd, century, wiktionary, webster, wordnet")	 
		 public String getIncludeSourceDictionaries() {
		 	return includeSourceDictionaries;
		 }  
		 
		 public void setIncludeSourceDictionaries(String  includeSourceDictionaries) {
		 	this.includeSourceDictionaries = includeSourceDictionaries;
		 }
			 //Exclude these comma-delimited source dictionaries
		 @AllowableValues(value="ahd, century, wiktionary, webster, wordnet")	 
		 public String getExcludeSourceDictionaries() {
		 	return excludeSourceDictionaries;
		 }  
		 
		 public void setExcludeSourceDictionaries(String  excludeSourceDictionaries) {
		 	this.excludeSourceDictionaries = excludeSourceDictionaries;
		 }
			 //Results to skip
		 @AllowableValues(value="0 to 1000")	 
		 public String getSkip() {
		 	return skip;
		 }  
		 
		 public void setSkip(String  skip) {
		 	this.skip = skip;
		 }
			 //Maximum number of results to return
		 @AllowableValues(value="1 to 1000")	 
		 public String getLimit() {
		 	return limit;
		 }  
		 
		 public void setLimit(String  limit) {
		 	this.limit = limit;
		 }
		
}